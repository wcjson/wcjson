.Dd March 27, 2025
.Dt WCJSON-DOCUMENT 3
.Os
.Sh NAME
.Nm wcjson_value_null ,
.Nm wcjson_value_bool ,
.Nm wcjson_value_string ,
.Nm wcjson_value_number ,
.Nm wcjson_value_object ,
.Nm wcjson_value_array ,
.Nm wcjson_value_head ,
.Nm wcjson_value_next ,
.Nm wcjson_value_tail ,
.Nm wcjson_value_prev ,
.Nm wcjson_value_foreach ,
.Nm wcjson_array_add_head ,
.Nm wcjson_array_add_tail ,
.Nm wcjson_array_get ,
.Nm wcjson_array_remove ,
.Nm wcjson_object_add_head ,
.Nm wcjson_object_add_tail ,
.Nm wcjson_object_get ,
.Nm wcjson_object_remove ,
.Nm wcjson_document_string ,
.Nm wcjson_document_mbstring ,
.Nm wcjsondocvalues ,
.Nm wcjsondocstrings ,
.Nm wcjsondocmbstrings ,
.Nm wcjsondocfprint ,
.Nm wcjsondocfprintasc ,
.Nm wcjsondocsprint ,
.Nm wcjsondocsprintasc ,
.Nm WCJSON_DOCUMENT_INITIALIZER
.Nd wide character JSON documents
.Sh SYNOPSIS
.In wcjson-document.h
.Ft int
.Fn wcjsondocvalues "struct wcjson *ctx" "struct wcjson_document *document" "const wchar_t *text" "const size_t len"
.Ft int
.Fn wcjsondocstrings "struct wcjson *ctx" "struct wcjson_document *document"
.Ft int
.Fn wcjsondocmbstrings "struct wcjson *ctx" "struct wcjson_document *document"
.Ft int
.Fn wcjsondocfprint "FILE *f" "const struct wcjson_document *document" "const struct wcjson_value *value"
.Ft int
.Fn wcjsondocfprintasc "FILE *f" "const struct wcjson_document *document" "const struct wcjson_value *value"
.Ft int
.Fn wcjsondocsprint "wchar_t *s" "size_t *lenp" "const struct wcjson_document document" "const struct wcjson_value *value"
.Ft int
.Fn wcjsondocsprintasc "wchar_t *s" "size_t *lenp" "const struct wcjson_document document" "const struct wcjson_value *value"
.Fn wcjson_value_head "struct wcjson_document *d" "struct wcjson_value *v"
.Fn wcjson_value_next "struct wcjson_document *d" "struct wcjson_value *v"
.Fn wcjson_value_tail "struct wcjson_document *d" "struct wcjson_value *v"
.Fn wcjson_value_prev "struct wcjson_document *d" "struct wcjson_value *v"
.Fn wcjson_value_foreach "lvalue" "struct wcjson_document *d" "struct wcjson_value *v"
.Ft struct wcjson_value *
.Fn wcjson_value_null "struct wcjson_document *document"
.Ft struct wcjson_value *
.Fn wcjson_value_bool "struct wcjson_document *document" "const bool value"
.Ft struct wcjson_value *
.Fn wcjson_value_string "struct wcjson_document *document" "const wchar_t *value" "const size_t len"
.Ft struct wcjson_value *
.Fn wcjson_value_number "struct wcjson_document *document" "const wchar_t *value" "const size_t len"
.Ft struct wcjson_value *
.Fn wcjson_value_object "struct wcjson_document *document"
.Ft struct wcjson_value *
.Fn wcjson_value_array "struct wcjson_document *doc"
.Ft int
.Fn wcjson_array_add_head "const struct wcjson_document *document" "struct wcjson_value *array" "struct wcjson_value *value"
.Ft int
.Fn wcjson_array_add_tail "const struct wcjson_document *document" "struct wcjson_value *array" "struct wcjson_value *value"
.Ft struct wcjson_value *
.Fn wcjson_array_get "const struct wcjson_document *document" "const struct wcjson_value *array" "const size_t index"
.Ft struct wcjson_value *
.Fn wcjson_array_remove "const struct wcjson_document *document" "struct wcjson_value *array" "const size_t index"
.Ft int
.Fn wcjson_object_add_head "struct wcjson_document *document" "struct wcjson_value *object" "const wchar_t *key" "const size_t key_len" "const struct wcjson_value *value"
.Ft int
.Fn wcjson_object_add_tail "struct wcjson_document *document" "struct wcjson_value *object" "const wchar_t *key" "const size_t key_len" "const struct wcjson_value *value"
.Ft struct wcjson_value *
.Fn wcjson_object_get "const struct wcjson_document *document" "const struct wcjson_value *object" "const wchar_t *key" "const size_t key_len"
.Ft struct wcjson_value *
.Fn wcjson_object_remove "const struct wcjson_document *document" "struct wcjson_value *object" "const wchar_t *key" "const size_t key_len"
.Ft wchar_t *
.Fn wcjson_document_string "struct wcjson_document *document" "const wchar_t *s" "const size_t len"
.Ft char *
.Fn wcjson_document_mbstring "struct wcjson_document *document" "const char *s" "const size_t len"
.Sh DESCRIPTION
The functions operate on the
.Vt wcjson_document
and
.Vt wcjson_value
structures.
The
.Vt wcjson_document
structure is defined as follows:
.Bd -literal -offset indent
struct wcjson_document {
	struct wcjson_value *values;
	size_t v_nitems;
	size_t v_nitems_cnt;
	size_t v_next;
	wchar_t *strings;
	size_t s_nitems;
	size_t s_nitems_cnt;
	size_t s_next;
	char *mbstrings;
	size_t mb_nitems;
	size_t mb_nitems_cnt;
	size_t mb_next;
	wchar_t *esc;
	size_t e_nitems;
	size_t e_nitems_cnt;
};
.Ed
.Pp
The elements of this structure are defined as follows:
.Bl -tag -width w_nitems
.It Fa values
Array of values of the document.
.It Fa v_nitems
Number of items the values array is capable of holding.
.It Fa v_nitems_cnt
Number of items the values array needs to be capable of holding.
.It Fa v_next
Index of the next item in the values array.
.It Fa strings
Array of strings of the document.
.It Fa s_nitems
Number of items the strings array is capable of holding.
.It Fa s_nitems_cnt
Number of items the strings array needs to be capable of holding.
.It Fa s_next
Index of the next item in the strings array.
.It Fa mbstrings
Array of multibyte strings of the document.
.It Fa mb_nitems
Number of items the mbstrings array is capable of holding.
.It Fa mb_nitems_cnt
Number of items the mbstrings array needs to be capable of holding.
.It Fa mb_next
Index of the next item in the mbstrings array.
.It Fa esc
Array of escape sequences.
.It Fa e_nitems
Number of items the esc array is capable of holding.
.It Fa e_nitems_cnt
Number of items the esc array needs to be capable of holding.
.El
.Pp
The
.Vt wcjson_value
structure is defined as follows:
.Bd -literal -offset indent
struct wcjson_value {
	unsigned is_null : 1;
	unsigned is_boolean : 1;
	unsigned is_true : 1;
	unsigned is_string : 1;
	unsigned is_number : 1;
	unsigned is_object : 1;
	unsigned is_array : 1;
	unsigned is_pair : 1;
	const wchar_t *string;
	size_t s_len;
	const char *mbstring;
	size_t mb_len;
	size_t idx;
	size_t head_idx;
	size_t tail_idx;
	size_t prev_idx;
	size_t next_idx;
};
.Ed
.Pp
The elements of this structure are defined as follows:
.Bl -tag -width is_boolean
.It Fa is_null
Flag indicating the value represents a JSON null literal.
.It Fa is_boolean
Flag indicating the value represents a JSON boolean literal.
.It Fa is_true
Flag indicating a JSON true or false literal.
.It Fa is_string
Flag indicating the value represents a JSON string.
.It Fa is_number
Flag indicating the value represents a JSON number.
.It Fa is_object
Flag indicating the value represents a JSON object.
.It Fa is_array
Flag indicating the value represents a JSON array.
.It Fa is_pair
Flag indicating the value represents a key value pair of a JSON object.
.It Fa string
Array holding items of a JSON string or number value.
.It Fa s_len
Number of items in the string array excluding any terminating items.
.It Fa mbstring
Array holding multibyte items of a JSON string or number value.
.It Fa mb_len
Number of items in the mbstring array excluding any terminating items.
.It Fa idx
Index of the value in the docment values array.
.It Fa head_idx
Index of the first value of the child value list.
.It Fa tail_idx
Index of the last value of the child value list.
.It Fa prev_idx
Index of the previous value in the child value list.
.It Fa next_idx
Index of the next value in the child value list.
.El
.Pp
The
.Fn WCJSON_DOCUMENT_INITIALIZER
macro expands to a rvalue expression for initializing an empty document.
.Pp
The
.Fn wcjsondocvalues
function deserializes
.Fa len
characters of JSON
.Fa text
to populate a
.Fa document .
The
.Fa values
member of the
.Fa document
should point to available memory, the
.Fa v_nitems
member should be set to the number of items available in that array and the
.Fa v_next
member should be set to the index of the next item in that array.
On successful completion that array holds the deserialized document structure,
the
.Fa v_next
member holds the index of the next item in that array, the
.Fa v_nitems_cnt
member holds the number of items the
.Fa values
array needs to be capable of holding for the document to get populated and the
.Fa s_nitems_cnt
member holds the number of items the
.Fa strings
array needs to be capable of holding for decoding strings and adding terminating
zero characters using the
.Fn wcjsondocstrings
function.
If the
.Fa values
member is NULL, only the
.Fa v_nitems_cnt
and
.Fa s_nitems_cnt
members are updated and
.Fa text
is only validated to contain well formed JSON text.
The
.Fn wcjsondocvalues
function does not decode strings.
The
.Fa string
member of any
.Vt wcjson_value
in the
.Fa values
array points to
.Fa text .
Those strings may contain escape sequences and are not zero terminated C
strings so that the value of the
.Fa s_len
member needs to be used when working with those strings.
.Pp
The
.Fn wcjsondocstrings
function decodes any
.Fa values
in a
.Fa document
by unapplying JSON escaping rules and adding terminating zero characters.
The
.Fa strings
member of the
.Fa document
needs to point to available memory, the
.Fa s_nitems
member needs to be set to the number of items available in that array and the
.Fa s_next
member needs to be set to the index of the next item in that array.
On successful completion that array holds the decoded strings, the
.Fa s_next
member holds the index of the next item in that array, the
.Fa mb_nitems_cnt
member holds the number of items the
.Fa mbstrings
array needs to be capable of holding for creating multibyte strings using the
.Fn wcjsondocmbstrings
function and the
.Fa e_nitems_cnt
member holds the number of items the
.Fa esc
array needs to be capable of holding for creating JSON escape sequences when
serializing the document.
The
.Fa string
member of any
.Vt wcjson_value
in the
.Fa values
array points to
.Fa strings
after successfull completion.
.Pp
The
.Fn wcjsondocmbstrings
function creates multibyte strings by converting all
.Fa string
members of all
.Fa values
in a
.Fa document
to
.Fa mbstring
multibyte strings.
The
.Fa mbstrings
member of the
.Fa document
needs to point to available memory, the
.Fa mb_nitems
member needs to be set to the number of items available in that array and the
.Fa mb_next
member needs to be set to the index of the next item in that array.
On successful completion that array holds the multibyte strings and the
.Fa mb_next
member holds the index of the next item in that array.
The
.Fa mbstrings
member of any
.Vt wcjson_value
in the
.Fa values
array points to
.Fa mbstrings
after successful completion.
.Pp
The
.Fn wcjsondocfprint ,
.Fn wcjsondocfprintasc ,
.Fn wcjsondocsprint
and
.Fn wcjsondocsprintasc
functions serialize a
.Fa document
to a file or a string.
The
.Fn wcjsondocfprintasc
and
.Fn wcjsondocsprintasc
functions serialize to a 7 bit ASCII compatible representation, whereas the
.Fn wcjsondocfprint
and
.Fn wcjsondocsprint
functions serialize to wide characters with just the standard JSON escaping
rules applied.
The
.Fa esc
member of the
.Fa document
needs to point to available memory and the
.Fa e_nitems
member needs to be set to the number of items available in that array.
For the
.Fn wcjsondocsprint
and
.Fn wcjsondocsprintasc
functions the
.Fa s
array needs to point to available memory and
.Fa lenp
needs to be set to the number of items available in that array.
On successful completion
.Fa lenp
is updated to the number of items used in that array.
.Pp
The
.Fn wcjson_value_null ,
.Fn wcjson_value_bool ,
.Fn wcjson_value_string ,
.Fn wcjson_value_number ,
.Fn wcjson_value_object
and
.Fn wcjson_value_array
functions add a value to a
.Fa document .
The
.Fa values
member of the
.Fa document
needs to point to available memory, the
.Fa v_nitems
member needs to be set to the number of items available in that array and the
.Fa v_next
member needs to be set to the index of the next item in that array.
On successful completion the
.Fa v_next
member holds the index of the next item in that array.
.Pp
The
.Fn wcjson_value_head ,
.Fn wcjson_value_next ,
.Fn wcjson_value_tail
and
.Fn wcjson_value_prev
macros expand to accessor rvalue expressions for retrieving values from the
child value list of a value.
.Pp
The
.Fn wcjson_value_foreach
macro expands to a loop expression for iterating the child value list of a
value.
.Pp
The
.Fn wcjson_array_add_head
and
.Fn wcjson_array_add_tail
functions add a value to an array.
The
.Fn wcjson_array_remove
function removes a value from an array.
The
.Fn wcjson_array_get
function gets a value from an array.
.Pp
The
.Fn wcjson_object_add_head
and
.Fn wcjson_object_add_tail
functions add a key value pair to an object.
The
.Fn wcjson_object_remove
function removes a key value pair from an object.
The
.Fn wcjson_object_get
function gets the value of a key value pair from an object.
.Pp
The
.Fn wcjson_document_string
function adds the wide string
.Fa s
of length
.Fa len
to
.Fa document .
The
.Fa strings
member of the
.Fa document
needs to point to available memory, the
.Fa s_nitems
member needs to be set to the number of items available in that array and the
.Fa s_next
member needs to be set to the index of the next item in that array.
.Pp
The
.Fn wcjson_document_mbstring
function adds the multibyte string
.Fa s
of length
.Fa len
to
.Fa document .
The
.Fa mbstrings
member of the
.Fa document
needs to point to available memory, the
.Fa mb_nitems
member needs to be set to the number of items available in that array and the
.Fa mb_next
member needs to be set to the index of the next item in that array.
.Sh RETURN VALUES
The functions return 0 on success, or a negative value or NULL if an error
occurs.
The global variable
.Va errno
is set to indicate the error.
The
.Fn wcjsondocvalues ,
.Fn wcjsondocstrings
and
.Fn wcjsondocmbstrings
functions provide status via
.Fa ctx .
The
.Fn wcjson_object_get
and
.Fn wcjson_object_remove
functions return the first value matching
.Fa key
or NULL if no such value is found.
The
.Fn wcjson_array_get
and
.Fn wcjson_array_remove
functions return the value at
.Fa index
or NULL if no such value is found.
The
.Fn wcjson_value_null ,
.Fn wcjson_value_bool ,
.Fn wcjson_value_string ,
.Fn wcjson_value_number ,
.Fn wcjson_value_object
and
.Fn wcjson_value_array
functions return the next available value from the
.Fa document
or NULL if no such value can be provided.
The
.Fn wcjson_document_string
and
.Fn wcjson_document_mbstring
functions return a pointer to the added string or NULL if no such string can
be provided.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EINVAL
A function was called with an invalid value.
.It Bq Er ERANGE
A size of
.Fa v_nitems ,
.Fa s_nitems ,
.Fa mb_nitems ,
.Fa e_nitems
or
.Fa *lenp
was too small.
.It Bq Er EILSEQ
An input contained illegal data.
.El
.Sh SEE ALSO
.Xr wcstombs 3
.Sh STANDARDS
.Rs
.%A T. Bray, Ed.
.%D December 2017
.%R RFC 8259
.%T The JavaScript Object Notation (JSON) Data Interchange Format
.Re
.Pp
.Rs
.%A J. Klensin
.%D February 2008
.%R RFC 5137
.%T ASCII Escaping of Unicode Characters
.Re
.Pp
.Rs
.%A F. Yergeau
.%D November 2003
.%R RFC 3629
.%T UTF-8, a transformation format of ISO 10646
.Re
.Pp
.Rs
.%A P. Hoffman
.%A F. Yergeau
.%D February 2000
.%R RFC 2781
.%T UTF-16, an encoding of ISO 10646
.Re
.Sh AUTHORS
.An -nosplit
.An Christian Schulte Aq Mt cs@schulte.it .
